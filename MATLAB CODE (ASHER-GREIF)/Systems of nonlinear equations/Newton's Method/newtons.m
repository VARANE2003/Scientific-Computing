function [x, k] = newtons(f, x, tol, nmax)
    %
    % Η συνάρτηση επιστρέφει στη μεταβλητή x ένα διάνυσμα-στήλη
    % x_k τέτοιο ώστε να ισχύει || x_k - x_{k-1} || < tol (1 + ||x_k|| )
    % και στη μεταβλητή k το πλήθος των απαιτούμενων επαναλήψεων
    % (υπολογισμών της ιακωβιανής).
    %
    % Στο ξεκίνημα, το χ περιέχει μια αρχική εικασία.
    % Αν το K ισούται με nmax, δεν έχει επιτευχθεί σύγκλιση.
    
    % Αρχικοποίηση
    x = x(:);  % το x πρέπει να είναι διάνυσμα-στήλη
    fprintf('k     ||f(x_k)|| \n')
    format long g

    % Μέθοδος Newton
    for k = 1:nmax
        % Υπολογισμός της συνάρτησης f και του Ιακωβιανού J στο σημείο x
        [fx, Jx] = feval(f, x);
        fprintf('%d     %e      \n', k-1, norm(fx));
        
        % Λύση του συστήματος Jx * p = -fx για p (Newton step)
        p = -Jx \ fx;
        
        % Ενημέρωση της λύσης
        x = x + p;
        
        % Έλεγχος κριτηρίου σύγκλισης
        if norm(p) < tol * (1 + norm(x))
            [fx, Jx] = feval(f, x);  % Ενημέρωση fx για την τυπωμένη έξοδο
            fprintf('%d     %e     \n', k, norm(fx));
            return
        end
    end

    % Αν το K ισούται με nmax, δεν έχει επιτευχθεί σύγκλιση.
    k = nmax;
end
